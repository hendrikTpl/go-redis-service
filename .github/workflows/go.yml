name: Go + Docker + Autotag

on:
  push:
    branches: ["main"]

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  autotag-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch # or minor/major if you prefer

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: autotag-release
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          IMAGE_REPO="ghcr.io/${REPO_OWNER}/${REPO_NAME}"
          docker build -t ${IMAGE_REPO}:latest .
          git fetch --tags
          export TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          docker tag ${IMAGE_REPO}:latest ${IMAGE_REPO}:${TAG}
          echo "IMAGE_REPO=${IMAGE_REPO}" >> $GITHUB_ENV

      - name: Push Docker image (latest)
        run: |
          docker push $IMAGE_REPO:latest

      - name: Push Docker image (tag)
        run: |
          git fetch --tags
          export TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          docker push $IMAGE_REPO:${TAG}
